{"version":3,"sources":["components/SearchField/SearchField.styles.js","store/reducers/status.slice.js","components/SearchField/SearchField.jsx","components/ForecastBlock/ForectBlock.styles.js","components/SvgCondition/SvgCondition.styles.jsx","components/SvgCondition/SvgCondition.jsx","components/ForecastBlock/ForecastBlock.jsx","App.js","store/reducers/weather.slice.js","core/axios.js","store/sagas/weather.saga.js","store/sagas/root.saga.js","store/reducers/store.js","index.js"],"names":["InputStyled","styled","input","ButtonStyled","button","REQUEST_DATA","requestData","city","type","statusSlice","createSlice","name","initialState","isLoading","isError","isUsed","reducers","changeLoadingStatus","state","fetchWeatherError","firstUseDetection","actions","statusReducer","reducer","SearchField","dispatch","useDispatch","useState","value","setValue","placeholder","onChange","e","target","onKeyDown","key","trim","onClick","className","viewBox","d","ForecastBox","div","SvgCard","img","SvgCondition","weatherState","useSelector","weather","weatherData","undefined","icon","src","alt","main","ForecastBlock","num","description","replace","str","toUpperCase","Math","floor","temp","humidity","wind","speed","deg","App","loading","status","trouble","used","weatherSlice","changeCity","action","payload","uploadWeather","weatherReducer","axios","require","WEATHER_API_URL","create","baseURL","GEOCORDING_API_URL","workerLoadCoordinates","watchLoadCoordinates","API_KEY","put","call","get","toLowerCase","getLatLonCityData","data","lat","lon","getWeatherByCoord","takeEvery","rootSaga","all","watchLoadCoordinatesSaga","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","store","configureStore","middleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd08297f.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const InputStyled = styled.input`\r\n  width: 40%;\r\n  margin-left: 30%;\r\n  margin-top: 10px;\r\n  padding: 12px 0;\r\n  font-size: 1rem;\r\n  border: 0px solid;\r\n  border-radius: 20px;\r\n  text-align: center;\r\n  font-family: 'Merriweather', serif;\r\n  font-style: italic;\r\n  box-shadow: 0px 5px 14px -2px rgba(34, 60, 80, 0.26);\r\n  outline: transparent;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const ButtonStyled = styled.button`\r\n  padding: 12px 20px;\r\n  border: 0px solid;\r\n  border-radius: 20px;\r\n  text-align: center;\r\n  box-shadow: 0px 5px 14px -2px rgba(34, 60, 80, 0.26);\r\n  cursor: pointer;\r\n  margin-left: 5px;\r\n  &:hover {\r\n    background-color: #BDBDBD;\r\n  }\r\n`;","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\n export const REQUEST_DATA = 'REQUEST_DATA';\r\n export const requestData = (city) => {\r\n     return({type: REQUEST_DATA, city});\r\n };\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    isError: false,\r\n    isUsed: false\r\n};\r\n\r\nexport const statusSlice = createSlice({\r\n    name: 'status',\r\n    initialState,\r\n    reducers: {\r\n        changeLoadingStatus: (state) => {\r\n            state.isLoading = !state.isLoading;\r\n        },\r\n        fetchWeatherError: (state) => {\r\n            state.isLoading = false;\r\n            state.isError = true;\r\n        },\r\n        firstUseDetection: (state) => {\r\n            state.isUsed = true;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {changeLoadingStatus, fetchWeatherError, firstUseDetection} = statusSlice.actions;\r\n\r\nexport const statusReducer = statusSlice.reducer;","import { InputStyled, ButtonStyled } from './SearchField.styles';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {requestData} from \"../../store/reducers/status.slice\";\r\n\r\n\r\nexport const SearchField = () => {\r\n    const dispatch = useDispatch();\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleSubmitOnClick = () => {\r\n        if (value.trim()) {\r\n            dispatch(requestData(value.trim()));\r\n            setValue('');\r\n        }\r\n    };\r\n\r\n    const handleSubmitOnKeyDown = (e) => {\r\n        if ((e.key === 'Enter' && (value.trim()))) {\r\n            dispatch(requestData(value.trim()));\r\n            setValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <InputStyled\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                onKeyDown={handleSubmitOnKeyDown}\r\n            />\r\n            <ButtonStyled onClick={handleSubmitOnClick}>\r\n                <svg className=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n                    <path\r\n                        d=\"M18.125,15.804l-4.038-4.037c0.675-1.079,1.012-2.308,1.01-3.534C15.089,\r\n                        4.62,12.199,1.75,8.584,1.75C4.815,1.75,1.982,4.726,2,8.286c0.021,3.577,\r\n                        2.908,6.549,6.578,6.549c1.241,0,2.417-0.347,3.44-0.985l4.032,4.026c0.167,\r\n                        0.166,0.43,0.166,0.596,0l1.479-1.478C18.292,16.234,18.292,15.968,18.125,\r\n                        15.804 M8.578,13.99c-3.198,0-5.716-2.593-5.733-5.71c-0.017-3.084,2.438-5.686,\r\n                        5.74-5.686c3.197,0,5.625,2.493,5.64,5.624C14.242,11.548,11.621,13.99,8.578,\r\n                        13.99 M16.349,16.981l-3.637-3.635c0.131-0.11,0.721-0.695,0.876-0.884l3.642,\r\n                        3.639L16.349,16.981z\"></path>\r\n                </svg>\r\n            </ButtonStyled>\r\n        </div>\r\n    );\r\n};","import styled from 'styled-components';\r\n\r\nexport const ForecastBox = styled.div`\r\n  width: 40%;\r\n  margin:auto;\r\n  min-width: 570px;\r\n  border: 0px solid;\r\n  border-radius: 20px;\r\n  text-align: left;\r\n  font: italic 1.2em \"Arvo\", serif;\r\n  box-shadow: 0px 5px 14px -2px rgba(34, 60, 80, 0.26);\r\n  outline: transparent;\r\n  background-color: white;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const SvgCard = styled.img`\r\n    margin-top: 0px;\r\n    margin-right: 0px;\r\n    width: 150px;\r\n    height: 150px;\r\n`;","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {SvgCard} from \"./SvgCondition.styles\";\r\n\r\nexport const SvgCondition = () => {\r\n    const weatherState = useSelector((state) => state.weather.weatherData);\r\n\r\n    if (weatherState?.weather?.[0]?.icon !== undefined) {\r\n        return (\r\n            <SvgCard src={`http://openweathermap.org/img/wn/${weatherState?.weather?.[0]?.icon}@2x.png`}\r\n                     alt={weatherState.weather[0].main}/>\r\n        );\r\n    } else {\r\n        return (\r\n            <div/>\r\n        );\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ForecastBox} from \"./ForectBlock.styles\";\r\nimport {SvgCondition} from \"../SvgCondition/SvgCondition\";\r\n\r\nexport const ForecastBlock = () => {\r\n    const weatherState = useSelector((state) => state.weather.weatherData);\r\n    const city = useSelector((state) => state.weather.city);\r\n\r\n    function degToCompass(num) {\r\n        const val = Math.floor((num / 22.5) + 0.5);\r\n        const arr = [\"N\", \"NNE\", \"NE\", \"ENE\", \"E\", \"ESE\", \"SE\", \"SSE\", \"S\", \"SSW\", \"SW\", \"WSW\", \"W\", \"WNW\", \"NW\", \"NNW\"];\r\n        return arr[(val % 16)];\r\n    }\r\n\r\n    if (weatherState !== null) {\r\n        return (\r\n            <ForecastBox>\r\n                <div className=\"noparams\">\r\n                    <div className=\"info\">\r\n                        <h1>{city}</h1>\r\n                        <h2>{weatherState.weather?.[0].description.replace(/^./, str => str.toUpperCase())}</h2>\r\n                    </div>\r\n                    <SvgCondition/>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"params\">\r\n                    <span>Temperature {Math.floor(weatherState.main?.temp)-273}C</span>\r\n                    <span>Humidity {weatherState.main?.humidity}%</span>\r\n                    <span>Wind {weatherState.wind?.speed} m/s {degToCompass(weatherState.wind?.deg)}</span>\r\n                </div>\r\n\r\n            </ForecastBox>\r\n        );\r\n    } else {\r\n        return (\r\n            <p>Введите город</p>\r\n        );\r\n    }\r\n};\r\n","import React from 'react';\nimport {SearchField} from \"./components/SearchField/SearchField\";\nimport {ForecastBlock} from \"./components/ForecastBlock/ForecastBlock\";\nimport {useSelector} from \"react-redux\";\n\nexport function App () {\n    const loading = useSelector((state) => state.status.isLoading);\n    const trouble = useSelector((state) => state.status.isError);\n    const used = useSelector((state) => state.status.isUsed);\n\n    if (loading) {\n        return (\n            <div className=\"App\">\n                <SearchField/>\n                <h1 className=\"loadinganderror\">Loading...</h1>\n            </div>\n        );\n    } else if (trouble) {\n        return (\n            <div className=\"App\">\n                <SearchField/>\n                <h1 className=\"loadinganderror\">Error occurred, try again</h1>\n            </div>\n        );\n    } else if (used === false) {\n        return (\n            <div className=\"App\">\n                <SearchField/>\n            </div>\n        );\n    } else {\n        return(\n            <div className=\"App\">\n                <SearchField/>\n                <ForecastBlock/>\n            </div>\n        );\n    }\n\n}\n\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    city: '',\r\n    weatherData: {\r\n\r\n    }\r\n};\r\n\r\nexport const weatherSlice = createSlice({\r\n    name: 'weather',\r\n    initialState,\r\n    reducers: {\r\n        changeCity: (state, action) => {\r\n            state.city = action.payload;\r\n        },\r\n        uploadWeather: (state, action) => {\r\n            state.weatherData = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {uploadWeather, changeCity} = weatherSlice.actions;\r\n\r\nexport const weatherReducer = weatherSlice.reducer;","const axios = require('axios');\r\n\r\nexport const WEATHER_API_URL = axios.create({\r\n    baseURL: 'https://api.openweathermap.org/data/2.5/'\r\n});\r\n\r\nexport const GEOCORDING_API_URL = axios.create({\r\n    baseURL: 'https://api.openweathermap.org/geo/1.0/'\r\n});","import { takeEvery, call, put } from 'redux-saga/effects';\r\nimport {\r\n    changeLoadingStatus,\r\n    fetchWeatherError,\r\n    firstUseDetection,\r\n    REQUEST_DATA,\r\n} from \"../reducers/status.slice\";\r\n\r\nimport {GEOCORDING_API_URL, WEATHER_API_URL} from \"../../core/axios\";\r\n\r\nimport {changeCity, uploadWeather} from \"../reducers/weather.slice\";\r\n\r\nconst API_KEY = \"79309a34f5a673793477ea0a1f82854e\";\r\n\r\nfunction* workerLoadCoordinates(payload) {\r\n    try {\r\n        yield put(firstUseDetection());\r\n        yield put(changeLoadingStatus());\r\n        const getLatLonCityData = yield call(GEOCORDING_API_URL.get,\r\n            `direct?q=${payload.city.toLowerCase()}&limit=1&appid=${API_KEY}`);\r\n        yield put(changeCity(getLatLonCityData.data[0].name));\r\n        const lat = Math.floor(getLatLonCityData.data[0].lat * 100) / 100;\r\n        const lon = Math.floor(getLatLonCityData.data[0].lon * 100) / 100;\r\n        const getWeatherByCoord = yield call(\r\n            WEATHER_API_URL.get,\r\n            `weather?lat=${lat}&lon=${lon}&appid=${API_KEY}`\r\n        );\r\n        yield put(uploadWeather(getWeatherByCoord.data));\r\n        yield put(changeLoadingStatus());\r\n    } catch (e) {\r\n        yield put(fetchWeatherError());\r\n    }\r\n}\r\n\r\nexport function* watchLoadCoordinates() {\r\n    yield takeEvery(REQUEST_DATA, workerLoadCoordinates);\r\n}","import { all }from 'redux-saga/effects';\r\nimport { watchLoadCoordinates as watchLoadCoordinatesSaga } from \"./weather.saga\";\r\n\r\nexport function* rootSaga() {\r\n    yield all([\r\n        watchLoadCoordinatesSaga(),\r\n    ]);\r\n}","import {combineReducers, configureStore} from \"@reduxjs/toolkit\";\r\nimport {statusReducer} from \"./status.slice\";\r\nimport {weatherReducer} from \"./weather.slice\";\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {rootSaga} from \"../sagas/root.saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst rootReducer = combineReducers({\r\n    weather: weatherReducer,\r\n    status: statusReducer,\r\n});\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [sagaMiddleware]\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport { Provider } from 'react-redux';\nimport { store } from \"./store/reducers/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}